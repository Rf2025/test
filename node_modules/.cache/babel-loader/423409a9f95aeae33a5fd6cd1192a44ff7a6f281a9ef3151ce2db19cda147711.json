{"ast":null,"code":"var _jsxFileName = \"/Users/ricardofeliz/Desktop/ecomv3/src/Contact.js\";\nimport contactCss from './Contact.module.css';\nimport logoImages from './silogo.jpeg';\n//import { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  const validateForm = () => {\n    const fname = document.getElementById('fname');\n    const lname = document.getElementById('lname');\n    const email = document.getElementById('email');\n    const textarea = document.getElementById('textarea');\n\n    // Check if inputs are empty, if empty, set border color and placeholder changes\n    if (fname.value === '' || lname.value === '' || email.value === '' || textarea.value === '') {\n      fname.style.border = '1px solid red';\n      fname.placeholder = 'Please fill out this field';\n      lname.style.border = '1px solid red';\n      lname.placeholder = 'Please fill out this field';\n      email.style.border = '1px solid red';\n      email.placeholder = 'Please fill out this field';\n      textarea.style.border = '1px solid red';\n      textarea.placeholder = 'Please fill out this field';\n      return false; // Return false to indicate form validation failed\n    } else {\n      return true; // Return true to indicate form validation passed\n    }\n  };\n\n  // Resets form by setting form values to empty\n  const resetForm = () => {\n    const fname = document.getElementById('fname');\n    const lname = document.getElementById('lname');\n    const email = document.getElementById('email');\n    const textarea = document.getElementById('textarea');\n    fname.value = '';\n    lname.value = '';\n    email.value = '';\n    textarea.value = '';\n    fname.style.border = '1px solid black';\n    fname.placeholder = 'First Name';\n    lname.style.border = '1px solid black';\n    lname.placeholder = 'Last Name';\n    email.style.border = '1px solid black';\n    email.placeholder = 'Email Address';\n    textarea.style.border = '1px solid black';\n    textarea.placeholder = 'Questions, Comments, Concerns';\n  };\n  const handleForm = async event => {\n    event.preventDefault();\n\n    // Validate the form before proceeding\n    if (!validateForm()) {\n      return; // Exit early if form validation fails\n    }\n    let form = event.target;\n    let formData = new FormData(form);\n    let formDataObj = Object.fromEntries(formData.entries());\n    try {\n      const response = await fetch('http://localhost:800/form', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formDataObj)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok.');\n      }\n\n      // Handle successful form submission (e.g., show success message)\n      alert('Thank you for contacting us! We will get back to you shortly.');\n      resetForm(); // Reset the form after successful submission\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle error (e.g., show error message)\n      alert('There was an error submitting your form. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: contactCss.formContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleForm,\n      className: contactCss.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: contactCss.imageContainer,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: contactCss.logoImages,\n          src: logoImages,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        name: \"fname\",\n        id: \"fname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lname\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        name: \"lname\",\n        id: \"lname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email address\",\n        name: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Questions, Comments, Concerns\",\n        name: \"textarea\",\n        id: \"textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: contactCss.buttonContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: contactCss.subButton,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: contactCss.resetButton,\n          type: \"button\",\n          onClick: resetForm,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["contactCss","logoImages","jsxDEV","_jsxDEV","Contact","validateForm","fname","document","getElementById","lname","email","textarea","value","style","border","placeholder","resetForm","handleForm","event","preventDefault","form","target","formData","FormData","formDataObj","Object","fromEntries","entries","response","fetch","method","headers","body","JSON","stringify","ok","Error","alert","error","console","className","formContainer","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","imageContainer","src","alt","htmlFor","type","name","id","buttonContainer","subButton","resetButton","onClick","_c","$RefreshReg$"],"sources":["/Users/ricardofeliz/Desktop/ecomv3/src/Contact.js"],"sourcesContent":["import contactCss from './Contact.module.css';\nimport logoImages from './silogo.jpeg';\n//import { useState } from 'react';\n\nfunction Contact() {\n    const validateForm = () => {\n        const fname = document.getElementById('fname');\n        const lname = document.getElementById('lname');\n        const email = document.getElementById('email');\n        const textarea = document.getElementById('textarea');\n\n        // Check if inputs are empty, if empty, set border color and placeholder changes\n        if (fname.value === '' || lname.value === '' || email.value === '' || textarea.value === '') {\n            fname.style.border = '1px solid red';\n            fname.placeholder = 'Please fill out this field';\n\n            lname.style.border = '1px solid red';\n            lname.placeholder = 'Please fill out this field';\n\n            email.style.border = '1px solid red';\n            email.placeholder = 'Please fill out this field';\n\n            textarea.style.border = '1px solid red';\n            textarea.placeholder = 'Please fill out this field';\n\n            return false; // Return false to indicate form validation failed\n        } else {\n            return true; // Return true to indicate form validation passed\n        }\n    };\n\n    // Resets form by setting form values to empty\n    const resetForm = () => {\n        const fname = document.getElementById('fname');\n        const lname = document.getElementById('lname');\n        const email = document.getElementById('email');\n        const textarea = document.getElementById('textarea');\n\n        fname.value = '';\n        lname.value = '';\n        email.value = '';\n        textarea.value = '';\n\n        fname.style.border = '1px solid black';\n        fname.placeholder = 'First Name';\n\n        lname.style.border = '1px solid black';\n        lname.placeholder = 'Last Name';\n\n        email.style.border = '1px solid black';\n        email.placeholder = 'Email Address';\n\n        textarea.style.border = '1px solid black';\n        textarea.placeholder = 'Questions, Comments, Concerns';\n    };\n\n    const handleForm = async (event) => {\n        event.preventDefault();\n\n        // Validate the form before proceeding\n        if (!validateForm()) {\n            return; // Exit early if form validation fails\n        }\n\n        let form = event.target;\n        let formData = new FormData(form);\n        let formDataObj = Object.fromEntries(formData.entries());\n        \n        try {\n            const response = await fetch('http://localhost:800/form', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formDataObj)\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok.');\n            }\n\n            // Handle successful form submission (e.g., show success message)\n            alert('Thank you for contacting us! We will get back to you shortly.');\n            resetForm(); // Reset the form after successful submission\n\n        } catch (error) {\n            console.error('Error:', error);\n            // Handle error (e.g., show error message)\n            alert('There was an error submitting your form. Please try again later.');\n        }\n    };\n\n    return (\n        <div className={contactCss.formContainer}>\n            <form onSubmit={handleForm} className={contactCss.form}>\n                <h1>Contact Us</h1>\n                <div className={contactCss.imageContainer}>\n                    <img className={contactCss.logoImages} src={logoImages} alt=\"Logo\" />\n                </div>\n                <label htmlFor=\"fname\">First Name</label>\n                <input type=\"text\" placeholder=\"First Name\" name=\"fname\" id=\"fname\" />\n                <label htmlFor=\"lname\">Last Name</label>\n                <input type=\"text\" placeholder=\"Last Name\" name=\"lname\" id=\"lname\" />\n                <label htmlFor=\"email\">Email address</label>\n                <input type=\"email\" placeholder=\"Email address\" name=\"email\" id=\"email\" />\n                <textarea placeholder=\"Questions, Comments, Concerns\" name=\"textarea\" id=\"textarea\"></textarea>\n                <div className={contactCss.buttonContainer}>\n                    <button className={contactCss.subButton} type=\"submit\">Submit</button>\n                    <button className={contactCss.resetButton} type=\"button\" onClick={resetForm}>Reset</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Contact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}